---
# yaml-language-server: $schema=https://kube-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app kube-prometheus-stack
spec:
  interval: 30m
  timeout: 15m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 73.2.0
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
  install:
    crds: Skip
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    crds: Skip
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: prometheus-operator-crds
      namespace: observability
    - name: longhorn
      namespace: longhorn-system
  values:
    crds:
      enabled: false
    alertmanager:
      ingress:
        enabled: true
        pathType: Prefix
        ingressClassName: internal
        annotations:
          external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN}
        hosts:
          - alertmanager.${SECRET_DOMAIN}
      alertmanagerSpec:
        alertmanagerConfiguration:
          name: alertmanager
          global:
            resolveTimeout: 5m
        externalUrl: https://alertmanager.${SECRET_DOMAIN}
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: longhorn
              resources:
                requests:
                  storage: 1Gi
    grafana:
      enabled: false
      forceDeployDashboards: true
      sidecar:
        dashboards:
          annotations:
            grafana_folder: Kubernetes
          multicluster:
            etcd:
              enabled: true
    kubeApiServer:
      enabled: true
    kubelet:
      enabled: true
    kubeControllerManager:
      enabled: true
      endpoints: &cp
        - 192.168.1.190
        - 192.168.1.191
        - 192.168.1.192
    kubeEtcd:
      enabled: true
      endpoints: *cp
    kubeScheduler:
      enabled: true
      endpoints: *cp
    kubeProxy:
      enabled: false
    kubeStateMetrics:
      enabled: true
    kube-state-metrics:
      fullnameOverride: kube-state-metrics
      metricLabelsAllowlist:
        - pods=[*]
        - deployments=[*]
        - persistentvolumeclaims=[*]
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels: ["__meta_kubernetes_pod_node_name"]
              targetLabel: kubernetes_node
    nodeExporter:
      enabled: true
    prometheus-node-exporter:
      fullnameOverride: node-exporter
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels: ["__meta_kubernetes_pod_node_name"]
              targetLabel: kubernetes_node
    prometheus:
      ingress:
        enabled: true
        ingressClassName: internal
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/icon: prometheus.png
          gethomepage.dev/name: Prometheus
          gethomepage.dev/group: Observability
          gethomepage.dev/app: prometheus
          gethomepage.dev/description: Monitoring Scrape Service
          gethomepage.dev/widget.type: prometheus
          gethomepage.dev/widget.url: http://kube-prometheus-stack-prometheus.observability:9090
          external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN}
        pathType: Prefix
        hosts:
          - prometheus.${SECRET_DOMAIN}
      prometheusSpec:
        scrapeInterval: 1m # Must match interval in Grafana Helm chart
        enableAdminAPI: true
        enableFeatures:
          - auto-gomemlimit
          - memory-snapshot-on-shutdown
          - new-service-discovery-manager
        externalLabels:
          cluster: ${CLUSTER}
        resources:
          requests:
            cpu: 100m
          limits:
            memory: 2Gi
        replicaExternalLabelName: __replica__
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        scrapeConfigSelectorNilUsesHelmValues: false
        retention: 7d
        retentionSize: 35GB
        replicas: 1
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: longhorn
              resources:
                requests:
                  storage: 40Gi
    cleanPrometheusOperatorObjectNames: true