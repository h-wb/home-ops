# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: minio
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      minio:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: quay.io/minio/minio
              tag: RELEASE.2025-07-23T15-54-02Z
            env:
              MINIO_API_CORS_ALLOW_ORIGIN: "https://minio.${SECRET_DOMAIN},https://s3.${SECRET_DOMAIN}"
              MINIO_BROWSER_REDIRECT_URL: "https://minio.${SECRET_DOMAIN}"
              MINIO_PROMETHEUS_JOB_ID: minio
              MINIO_PROMETHEUS_URL: "https://prometheus.${SECRET_DOMAIN}"
              MINIO_PROMETHEUS_AUTH_TYPE: public
              MINIO_STORAGE_CLASS_RRS: EC:0
              MINIO_STORAGE_CLASS_STANDARD: EC:0
              MINIO_UPDATE: "off"
            envFrom:
              - secretRef:
                  name: minio-secret
            args: ["server", "/data", "--console-address", ":9001"]
            probes:
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
              liveness:
                enabled: true
              readiness:
                enabled: true
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
              limits:
                memory: 2Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [10000]
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: minio
        type: LoadBalancer
        annotations:
          io.cilium/lb-ipam-ips: 192.168.1.57
        externalTrafficPolicy: Cluster
        ports:
          http:
            port: &httpPort 9001
          s3:
            port: &s3Port 9000
    serviceMonitor:
      app:
        serviceName: minio
        endpoints:
          - port: s3
            scheme: http
            path: /minio/v2/metrics/cluster
            interval: 1m
            scrapeTimeout: 10s
    route:
      app:
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: Minio
          gethomepage.dev/description: S3 Object Storage
          gethomepage.dev/group: Infrastructure
          gethomepage.dev/icon: minio.png
        hostnames: ["{{ .Release.Name }}.${SECRET_DOMAIN}"]
        parentRefs:
          - name: external
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - identifier: app
                port: *httpPort
      s3:
        hostnames: ["s3.${SECRET_DOMAIN}"]
        parentRefs:
          - name: external
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - identifier: app
                port: *s3Port
    persistence:
      config:
        type: nfs
        server: ${NFS_ADDR:=temp}
        path: /mnt/tank/minio
        globalMounts:
          - path: /data