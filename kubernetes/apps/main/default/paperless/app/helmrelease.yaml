# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app paperless
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  dependsOn: []
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      paperless:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/paperless-ngx/paperless-ngx
              tag: 2.18.2
            env:
              # Application
              #PAPERLESS_APPS: allauth.socialaccount.providers.openid_connect
              PAPERLESS_URL: "https://{{ .Release.Name }}.${SECRET_DOMAIN}"
              PAPERLESS_PORT: "8000"
              PAPERLESS_TIME_ZONE: Europe/Paris
              PAPERLESS_WEBSERVER_WORKERS: "2"
              PAPERLESS_TASK_WORKERS: "2"
              # Folder Importer
              PAPERLESS_CONSUMER_POLLING: "60"
              PAPERLESS_CONSUMER_RECURSIVE: "true"
              PAPERLESS_CONSUMER_SUBDIRS_AS_TAGS: "true"
              # Database
              PAPERLESS_DBENGINE: postgresql
              PAPERLESS_DBPORT: "5432"
              PAPERLESS_DBNAME: "{{ .Release.Name }}"
              PAPERLESS_DBHOST: "{{ .Release.Name }}-pgbouncer.default.svc"
              PAPERLESS_DBUSER: "{{ .Release.Name }}"
              PAPERLESS_DBPASS:
                valueFrom:
                  secretKeyRef:
                    name: "{{ .Release.Name }}-pguser-{{ .Release.Name }}"
                    key: password
              # Remote User Auth
              PAPERLESS_ACCOUNT_ALLOW_SIGNUPS: "false"
              PAPERLESS_SOCIALACCOUNT_ALLOW_SIGNUPS: "false"
              # Folders
              PAPERLESS_CONSUMPTION_DIR: /data/paperless/consume
              PAPERLESS_DATA_DIR: /data/paperless/data
              PAPERLESS_EXPORT_DIR: /data/paperless/export
              PAPERLESS_MEDIA_ROOT: /data/paperless/media
              # OCR
              PAPERLESS_OCR_LANGUAGES: fra eng
              PAPERLESS_OCR_LANGUAGE: fra
              # Redis
              PAPERLESS_REDIS: "redis://dragonfly.database.svc.cluster.local:6379"
              # User Permissions
              USERMAP_GID: "65542"
            envFrom:
              - secretRef:
                  name: "{{ .Release.Name }}-secret"
            resources:
              requests:
                cpu: 15m
              limits:
                memory: 2048Mi
    service:
      app:
        ports:
          http:
            port: &port 8000
    route:
      app:
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Home
          gethomepage.dev/name: Paperless
          gethomepage.dev/icon: paperless.png
          gethomepage.dev/description: Document OCR Software
          gethomepage.dev/widget.type: paperlessngx
          gethomepage.dev/widget.url: http://paperless.default:8000
          gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_PAPERLESS_TOKEN}}` }}"
        hostnames: ["{{ .Release.Name }}.${SECRET_DOMAIN}"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
    persistence:
      config:
        existingClaim: "{{ .Release.Name }}"
        globalMounts:
          - path: /data/local
      nas:
        type: nfs
        server: ${NFS_ADDR:=temp}
        path: /mnt/tank/hwe
        globalMounts:
          - path: /data/paperless
            subPath: Docunents/Paperless