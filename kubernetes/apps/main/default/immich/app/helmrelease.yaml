---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app immich
spec:
  releaseName: immich
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
  values:
    defaultPodOptions:
      enableServiceLinks: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
    controllers:
      server:
        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v2.0.1
            env:
              IMMICH_WORKERS_INCLUDE: api
              DB_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: immich-pguser-immich
                    key: password
            envFrom:
              - configMapRef:
                  name: immich-configmap
      microservices:
        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v2.0.1
            env:
              IMMICH_WORKERS_INCLUDE: null
              IMMICH_WORKERS_EXCLUDE: api
              DB_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: immich-pguser-immich
                    key: password
            envFrom:
              - configMapRef:
                  name: immich-configmap
            resources:
              requests:
                gpu.intel.com/i915: 1
              limits:
                gpu.intel.com/i915: 1
      machine-learning:
        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-machine-learning
              tag: v2.0.1
            envFrom:
              - configMapRef:
                  name: immich-configmap
            resources:
              requests:
                cpu: 15m
                memory: 250Mi
              limits:
                memory: 4000Mi
    service:
      # immich:
      #   controller: immich
      #   enabled: false
      machine-learning:
        controller: machine-learning
        ports:
          http:
            port: 3003
      server:
        enabled: true
        controller: server
        ports:
          http:
            port: &port 2283
    route:
      app:
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Home
          gethomepage.dev/name: immich
          gethomepage.dev/icon: immich.png
          gethomepage.dev/app: immich
        hostnames:
          - "{{ .Release.Name }}.${SECRET_DOMAIN}"
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - identifier: server
                port: *port
    persistence:
      data:
        enabled: true
        type: nfs
        server: ${NFS_ADDR:=temp}
        path: /mnt/tank/hwe/Images/Immich
        globalMounts:
          - path: /usr/src/app/upload
            # advancedMounts:
            #   server:
            #     app:
            #       - path: /usr/src/app/upload
            #   microservices:
            #     app:
            #       - path: /usr/src/app/upload
      # data2:
      #   enabled: true
      #   type: nfs
      #   server: ${NFS_ADDR:=temp}
      #   path: /volume1/vault-01/static_media/photography
      #   advancedMounts:
      #     server:
      #       app:
      #         - path: /usr/src/app/photography
      #     microservices:
      #       app:
      #         - path: /usr/src/app/photography
      # model-cache:
      #   type: persistentVolumeClaim
      #   existingClaim: immich-machine-learning-cache
      #   advancedMounts:
      #     machine-learning:
      #       app:
      #         - path: /cache
      machine-learning-cache:
        existingClaim: immich-machine-learning-cache
        advancedMounts:
          machine-learning:
            app:
              - path: /cache
                subPath: cache
              - path: /.cache
                subPath: dotCache
      tmp:
        enabled: true
        type: emptyDir
