# yaml-language-server: $schema=https://raw.githubusercontent.com/budimanjojo/talhelper/master/pkg/config/schemas/talconfig.json
---
# renovate: datasource=docker depName=ghcr.io/siderolabs/installer
talosVersion: v1.7.5
# renovate: datasource=docker depName=ghcr.io/siderolabs/kubelet
kubernetesVersion: v1.30.3


clusterName: &cluster dev
endpoint: https://192.168.1.253:6443
clusterPodNets:
  - "10.42.0.0/16"
clusterSvcNets:
  - "10.43.0.0/16"
additionalApiServerCertSans: &sans
  - "192.168.1.253"
  - 127.0.0.1 # KubePrism
additionalMachineCertSans: *sans
cniConfig:
  name: none

nodes:
  - hostname: "hyperv1"
    ipAddress: "192.168.1.24"
    installDiskSelector:
      size: "<= 256GB"
      model: "Virtual Disk"
    # machineDisks:
    #   - device: /dev/nvme0n1
    #     partitions:
    #       - mountpoint: /var/lib/longhorn
    talosImageURL: factory.talos.dev/installer/743d53d3c9cc1942e0a3fc7167565665ea25823e6261d82bf022e9a9e50ed84d
    controlPlane: true
    networkInterfaces:
      - deviceSelector:
          hardwareAddr: "00:15:5d:e0:9d:15"
        dhcp: true
        mtu: 1500
        vip:
          ip: "192.168.1.253"

patches:
  # Configure containerd
  - |-
    machine:
      files:
        - op: create
          path: /etc/cri/conf.d/20-customization.part
          content: |-
            [plugins."io.containerd.grpc.v1.cri"]
              enable_unprivileged_ports = true
              enable_unprivileged_icmp = true
            [plugins."io.containerd.grpc.v1.cri".containerd]
              discard_unpacked_layers = false
            [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
              discard_unpacked_layers = false

  # Configure NFS Mounts
  - |-
    machine:
      files:
        - op: overwrite
          path: /etc/nfsmount.conf
          permissions: 420
          content: |-
            [ NFSMount_Global_Options ]
              nfsvers = 4.2
              hard = True
              noatime = True
              nodiratime = True
              rsize = 131072
              wsize = 131072
              nconnect = 8

  # Disable search domain everywhere
  - |-
    machine:
      network:
        disableSearchDomain: true

  # Enable cluster discovery
  - |-
    cluster:
      discovery:
        registries:
          kubernetes:
            disabled: false
          service:
            disabled: false

  # Configure kubelet
  - |-
    machine:
      kubelet:
        extraArgs:
          image-gc-low-threshold: 50
          image-gc-high-threshold: 55
          rotate-server-certificates: true
        nodeIP:
          validSubnets:
            - "192.168.1.0/24"

  # Custom sysctl settings
  - |-
    machine:
      sysctls:
        fs.inotify.max_queued_events: "65536"
        fs.inotify.max_user_watches: "524288"
        fs.inotify.max_user_instances: "8192"
        net.core.rmem_max: "2500000"
        net.core.wmem_max: "2500000"

  # Mount longhorn in kubelet
  - |-
    machine:
      kubelet:
        extraMounts:
          - destination: /var/lib/longhorn
            type: bind
            source: /var/lib/longhorn
            options:
              - bind
              - rshared
              - rw

  # # Disable predictable NIC naming
  # - |-
  #   machine:
  #     install:
  #       extraKernelArgs:
  #         - net.ifnames=0

  # Wipe install disk
  - |-
    machine:
      install:
        wipe: true

controlPlane:
  patches:
    # Cluster configuration
    - |-
      cluster:
        allowSchedulingOnMasters: true
        controllerManager:
          extraArgs:
            bind-address: 0.0.0.0
        coreDNS:
          disabled: true
        proxy:
          disabled: true
        scheduler:
          extraArgs:
            bind-address: 0.0.0.0

    # ETCD configuration
    - |-
      cluster:
        etcd:
          extraArgs:
            listen-metrics-urls: http://0.0.0.0:2381
          advertisedSubnets:
            - "192.168.1.0/24"



    # Disable default API server admission plugins.
    - |-
      - op: remove
        path: /cluster/apiServer/admissionControl

    # Enable K8s Talos API Access
    - |-
      machine:
        features:
          kubernetesTalosAPIAccess:
            enabled: true
            allowedRoles:
              - os:admin
            allowedKubernetesNamespaces:
              - kube-tools
              - system-upgrade

    # Enable hostDNS:
    - |-
      machine:
        features:
          hostDNS:
            enabled: true
            forwardKubeDNSToHost: true
            resolveMemberNames: true