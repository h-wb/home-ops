---
version: "3"

tasks:

  privileged:
    desc: Run a privileged pod
    interactive: true
    cmds:
      - |
        kubectl --context {{.cluster}} run -n {{.namespace}} debug-privileged -i --tty --rm --image=null --privileged --overrides='
          {
            "apiVersion": "v1",
            "spec": {
              "containers": [
                {
                  "name": "debug",
                  "image": "docker.io/library/alpine:latest",
                  "command": [
                    "/bin/bash"
                  ],
                  "stdin": true,
                  "stdinOnce": true,
                  "tty": true
                }
              ],
              {{- if .node }}
              "nodeName": "{{.node}}",
              {{- end }}
              {{- if .hostnetwork }}
              "hostNetwork": true,
              {{- end }}
              "restartPolicy": "Never"
            }
          }'
    vars:
      node: "{{.node | default nil}}"
      namespace: '{{.namespace | default "default"}}'
      hostnetwork: "{{.hostnetwork | default false}}"
      cluster: '{{ or .cluster (fail "Argument (cluster) is required") }}'

  browse-pvc:
    desc: Browse PersistentVolumeClaims
    summary: |
      Args:
        cluster: Cluster to run command against (required)
        ns: Namespace to browse PersistentVolumeClaims in (default: default)
        claim: PersistentVolumeClaim to browse (required)
    interactive: true
    cmd: kubectl browse-pvc --context {{.cluster}} --namespace {{.ns}} {{.claim}}
    requires:
      vars:
        - "cluster"
        - "claim"

  delete-failed-pods:
    desc: Deletes pods with a fucked status
    summary: |
      Args:
        cluster: Cluster to run command against (required)
    cmds:
      - for:
          - "Evicted"
          - "Failed"
          - "Succeeded"
        cmd: kubectl --context {{.cluster}} delete pods --field-selector status.phase={{.ITEM}} -A --ignore-not-found=true
    requires:
      vars:
        - "cluster"
